@import "../../utils/css/variables.scss";
@import "../../utils/css/mixins.scss";

.header {
  position: fixed;
  top: 0;
  width: 100%;
  height: $header-height;
  z-index: $header-z-i;
  color: $light-color;
  background: $bg-color-main;
  border-bottom: 1px solid $light-color;

  @media (max-width: 767px) {
    height: $header-height-sm;
  }
}

.header__inner {
  @include app-inner-width;
  height: 100%;
  margin: 0 auto;
  display: flex;
  align-items: center;
}

.header__logo {
  height: 40%;
  cursor: pointer;

  @media (max-width: 1200px) {
    height: 40%;
  }
  @media (max-width: 992px) {
    height: 30%;
  }

  svg {
    height: 100%;
    fill: $bg-color-secondary;
    transition: $main-transition;

    @mixin hover {
      fill: $light-color;
    }
    &:active {
      @include hover;
    }
    @media (hover: hover) and (pointer: fine) {
      &:hover {
        @include hover;
      }
    }
  }
}

.header__menu {
  flex-grow: 1;
  display: flex;
  justify-content: center;
  font-size: 1.2rem;
  font-weight: bold;

  @media (max-width: 1200px) {
    margin: 0 2vw 0 2vw;
    font-size: 1rem;
  }
  @media (max-width: 767px) {
    display: block;
    position: absolute;
    top: $header-height-sm;
    left: 0;
    width: 100%;
    height: 0;
    margin: 0;
    overflow-y: scroll;
  }
}

.header__menu_open {
  @media (max-width: 767px) {
    height: calc(100vh - #{$header-height-sm});
  }
}

.header__menu-item-container {
  margin: 0 25px;
  cursor: pointer;
  transition: $main-transition;

  @media (max-width: 1200px) {
    margin: 0 15px;
  }

  @media (max-width: 767px) {
    position: relative;
    left: -100%;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(((100vh - #{$header-height-sm}) / #{$nav-items-amount}));
    background: $bg-color-main-dark;
    border-bottom: $border-bottom-width-mob-nav-item solid $bg-color-secondary;
    font-size: 1.25rem;
    transition-property: left, height, color;
    transition-duration: 0.15s, 0.15s, 0.15s;
  }
}

.header__menu-item-container_open {
  @media (max-width: 767px) {
    left: 0;
  }
}

@for $x from 1 through 4 {
  .header__menu-item-container:nth-child(#{$x}) {
    @media (max-width: 767px) {
      transition-delay: $x * 0.1s, 0s, 0s;
    }
  }
}

.header__menu-item-link-container {
  @media (max-width: 767px) {
    width: 100%;
    height: calc(
      ((100vh - #{$header-height-sm}) / #{$nav-items-amount}) - #{$border-bottom-width-mob-nav-item}
    );
  }

  a {
    text-decoration: none;
    color: $light-color;
    text-transform: uppercase;
    transition: $main-transition;
    @include hover-to-seconadry-color;

    @media (max-width: 767px) {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }
}

.header__menu-btn {
  display: none;
  position: relative;
  height: 1.5rem;
  width: 2rem;
  margin-left: 2rem;
  font-size: 2rem;
  cursor: pointer;
  transition: $menu-btn-transition;

  @media (max-width: 767px) {
    display: block;
  }

  @mixin hover {
    .header__menu-btn-line {
      background: $bg-color-secondary;
    }
  }
  &:active {
    @include hover;
  }

  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @include hover;
    }
  }
}

.header__menu-btn-line {
  position: absolute;
  top: 10px;
  width: 100%;
  height: 6px;
  background: $light-color;
  border-radius: 3px;

  &:first-child {
    top: 0px;
  }
  &:last-child {
    top: 20px;
  }

  &:first-child,
  &:last-child {
    // transition-property: top, transform;
    // transition-duration: 0.3s, 0.3s;
    // transition-delay: 0s, 0.3s;
    transition: background-color 0.15s linear, top 0.15s linear 0.15s, transform 0.15s linear 0s;
  }
  &:nth-child(2) {
    transition: background-color 0.15s linear, opacity 0s linear 0.2s;
  }
}

.header__menu-btn_close {
  .header__menu-btn-line {
    &:first-child {
      top: 10px;
      transform: rotate(45deg);
    }
    &:nth-child(2) {
      opacity: 0;
    }
    &:last-child {
      top: 10px;
      transform: rotate(-45deg);
    }

    &:first-child,
    &:last-child {
      transition: background-color 0.15s linear, top 0.15s linear 0s, transform 0.15s linear 0.15s !important;
    }
  }
}
